#ifndef CME_DB_H
#define CME_DB_H

#include "../data/data.h"
#include "../utils/list.h"
#include "../utils/rb.h"
#include "../utils/string.h"

typedef u32 cmh;
struct cmh_init{
    cmh cmh;
    struct list_head list;
};
struct cmh_keypaired{
    struct list_head list;
    cmh cmh;
    algorithm algorithm;
    string public_key;
    string private_key;
};
struct cmh_key_cert{
    cmh cmh;
    struct rb_head rb;
    string private_key;
    certificate cert;
};
struct alloced_cmhs{
   struct cmh_init cmh_init;
   struct cmh_keypaired cmh_keys;
   struct cmh_key_cert cmh_key_cert;
}
struct cmh_chain{
    cmh cmh;
    struct list_head;
}
struct cmh_db{
    struct alloced_cmhs alloc_cmhs;
    struct cmh_chain cmh_chain;
};
struct lsis_chain{
    struct list_head list;
    lsis lsis;
};
struct alloced_lsis{
    struct list_head list;
    lsis lsis;
    string data;
};
struct lsis_db{
    struct alloced_lsis alloced_lsis;
    struct lsis_chain lsises;
};
struct crl_head{
    struct list_head list;
    crl_series crl_series;
    u8 ca_id;
    u32 serial_number;
    time32 start_period;
    time32 issue_date;
    time32 next_crl_time;
};

struct revocation{
    time64 expriry;
    u8 ca_id[8];
};

struct certs_db{
  certificate cert;
  certid10 certid10;
  bool verified;
  struct crl_head* crl;
  bool trust_anchor;
  struct rb_head rb;
  struct revocation revocation;
};
struct cme_db{
    struct cert_head certs;
    struct crl_head crls;
    struct lsis_db lsises;
    struct cmh_head cmhs;
};
#endif
